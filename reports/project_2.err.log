Traceback (most recent call last):
  File "C:\Users\Windows 11\AppData\Local\Programs\Python\Python311\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\Windows 11\AppData\Local\Programs\Python\Python311\Lib\site-packages\nbclient\client.py", line 1265, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Windows 11\AppData\Local\Programs\Python\Python311\Lib\site-packages\jupyter_core\utils\__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Windows 11\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\Windows 11\AppData\Local\Programs\Python\Python311\Lib\site-packages\nbclient\client.py", line 703, in async_execute
    await self.async_execute_cell(
  File "C:\Users\Windows 11\AppData\Local\Programs\Python\Python311\Lib\site-packages\nbclient\client.py", line 1021, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\Windows 11\AppData\Local\Programs\Python\Python311\Lib\site-packages\nbclient\client.py", line 915, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from sklearn.ensemble import RandomForestRegressor
from sklearn.preprocessing import StandardScaler
import numpy as np

# Contoh data pelatihan (gantilah dengan data pelatihan sebenarnya)
X_train = np.array([[28450, 28250, 27950, 27850], [27900, 27650, 27600, 27250], [27250, 26800, 26550, 26000]])  # Data fitur pelatihan
y_train = np.array([[26800], [26850], [26100]])  # Target pelatihan

# Inisialisasi dan fit scaler dengan data pelatihan
scaler_features = StandardScaler()
scaler_target = StandardScaler()

# Fit scaler pada data fitur dan target
X_train_normalized = scaler_features.fit_transform(X_train)
y_train_normalized = scaler_target.fit_transform(y_train)

# Inisialisasi dan fit model Random Forest dengan data pelatihan yang telah dinormalisasi
random_forest_model = RandomForestRegressor()
random_forest_model.fit(X_train_normalized, y_train_normalized.ravel())

# Fungsi untuk memprediksi Harga berdasarkan input dari pengguna menggunakan Random Forest Regressor
def predict_custom_data_rf(input_data):
    # Normalisasi data input menggunakan scaler yang sama dengan data pelatihan
    input_data_normalized = scaler_features.transform(np.array(input_data).reshape(1, -1))

    # Prediksi dengan model Random Forest Regressor
    predicted_normalized = random_forest_model.predict(input_data_normalized)

    # Mengembalikan prediksi ke skala asli
    predicted_original = scaler_target.inverse_transform(predicted_normalized.reshape(-1, 1))

    return predicted_original[0, 0]  # Mengembalikan nilai prediksi dalam bentuk skalar.

# Meminta input dari pengguna
print("Masukkan nilai Harga dari hari-hari sebelumnya:")
Harga_1 = float(input("Harga 1 hari sebelumnya: "))
Harga_2 = float(input("Harga 2 hari sebelumnya: "))
Harga_3 = float(input("Harga 3 hari sebelumnya: "))
Harga_4 = float(input("Harga 4 hari sebelumnya: "))

# Data input yang dimasukkan oleh pengguna
user_input = [Harga_1, Harga_2, Harga_3, Harga_4]

# Prediksi Harga untuk data yang dimasukkan menggunakan Random Forest
predicted_value_rf = predict_custom_data_rf(user_input)

# Menampilkan hasil prediksi
print(f"Prediksi Harga untuk hari selanjutnya adalah: {predicted_value_rf:.2f}")
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mStdinNotImplementedError[0m                  Traceback (most recent call last)
Cell [1;32mIn[12], line 36[0m
[0;32m     34[0m [38;5;66;03m# Meminta input dari pengguna[39;00m
[0;32m     35[0m [38;5;28mprint[39m([38;5;124m"[39m[38;5;124mMasukkan nilai Harga dari hari-hari sebelumnya:[39m[38;5;124m"[39m)
[1;32m---> 36[0m Harga_1 [38;5;241m=[39m [38;5;28mfloat[39m([38;5;28;43minput[39;49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mHarga 1 hari sebelumnya: [39;49m[38;5;124;43m"[39;49m[43m)[49m)
[0;32m     37[0m Harga_2 [38;5;241m=[39m [38;5;28mfloat[39m([38;5;28minput[39m([38;5;124m"[39m[38;5;124mHarga 2 hari sebelumnya: [39m[38;5;124m"[39m))
[0;32m     38[0m Harga_3 [38;5;241m=[39m [38;5;28mfloat[39m([38;5;28minput[39m([38;5;124m"[39m[38;5;124mHarga 3 hari sebelumnya: [39m[38;5;124m"[39m))

File [1;32m~\AppData\Local\Programs\Python\Python311\Lib\site-packages\ipykernel\kernelbase.py:1181[0m, in [0;36mKernel.raw_input[1;34m(self, prompt)[0m
[0;32m   1179[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28mself[39m[38;5;241m.[39m_allow_stdin:
[0;32m   1180[0m     msg [38;5;241m=[39m [38;5;124m"[39m[38;5;124mraw_input was called, but this frontend does not support input requests.[39m[38;5;124m"[39m
[1;32m-> 1181[0m     [38;5;28;01mraise[39;00m StdinNotImplementedError(msg)
[0;32m   1182[0m [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_input_request(
[0;32m   1183[0m     [38;5;28mstr[39m(prompt),
[0;32m   1184[0m     [38;5;28mself[39m[38;5;241m.[39m_parent_ident[[38;5;124m"[39m[38;5;124mshell[39m[38;5;124m"[39m],
[0;32m   1185[0m     [38;5;28mself[39m[38;5;241m.[39mget_parent([38;5;124m"[39m[38;5;124mshell[39m[38;5;124m"[39m),
[0;32m   1186[0m     password[38;5;241m=[39m[38;5;28;01mFalse[39;00m,
[0;32m   1187[0m )

[1;31mStdinNotImplementedError[0m: raw_input was called, but this frontend does not support input requests.
StdinNotImplementedError: raw_input was called, but this frontend does not support input requests.

